name: Download and Deploy Release from Private Repo

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Get release ID
        id: get_release_id
        run: |
          REPO="ddicior/next-channel-lib"
          TAG="v${{ env.VERSION }}"
          TOKEN="${{ secrets.PAT }}"
          RELEASE_ID=$(curl -s -H "Authorization: token ${TOKEN}" \
            "https://api.github.com/repos/${REPO}/releases/tags/${TAG}" | jq -r '.id')
          echo "RELEASE_ID=${RELEASE_ID}" >> $GITHUB_ENV

      - name: Get asset ID
        id: get_asset_id
        run: |
          REPO="ddicior/next-channel-lib"
          FILE="next-channel-lib-${{ env.VERSION }}.tar.gz"
          TOKEN="${{ secrets.PAT }}"
          ASSET_ID=$(curl -s -H "Authorization: token ${TOKEN}" \
            "https://api.github.com/repos/${REPO}/releases/${{ env.RELEASE_ID }}/assets" | jq -r ".[] | select(.name == \"${FILE}\") | .id")
          echo "ASSET_ID=${ASSET_ID}" >> $GITHUB_ENV

      - name: Download Release Asset
        run: |
          REPO="ddicior/next-channel-lib"
          FILE="next-channel-lib-${{ env.VERSION }}.tar.gz"
          TOKEN="${{ secrets.PAT }}"
          DOWNLOAD_URL="https://api.github.com/repos/${REPO}/releases/assets/${{ env.ASSET_ID }}"
          curl -H "Authorization: token ${TOKEN}" \
               -H "Accept: application/octet-stream" \
               -L "${DOWNLOAD_URL}" \
               -o "${FILE}"

      - name: List Downloaded Files
        run: ls -lh next-channel-lib-${{ env.VERSION }}.tar.gz

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: 'v${{ env.VERSION }}'
          release_name: 'Build v${{ env.VERSION }}'
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: next-channel-lib-${{ env.VERSION }}.tar.gz
          asset_name: next-channel-lib-${{ env.VERSION }}.tar.gz
          asset_content_type: application/gzip
